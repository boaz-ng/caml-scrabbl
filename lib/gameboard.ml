type multipler = TW | DW | TL | DL | Star | No
type elt = multipler * char
type t = elt array array

let empty : t = [||]

let init : t =
  [|
    [|
      (TW, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (TW, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (TW, ' ');
    |];
    [|
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (TL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (TL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
    |];
    [|
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
    |];
    [|
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
    |];
    [|
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
    |];
    [|
      (No, ' ');
      (TL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (TL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (TL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (TL, ' ');
      (No, ' ');
    |];
    [|
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
    |];
    [|
      (TW, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (Star, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (TW, ' ');
    |];
    [|
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
    |];
    [|
      (No, ' ');
      (TL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (TL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (TL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (TL, ' ');
      (No, ' ');
    |];
    [|
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
    |];
    [|
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
    |];
    [|
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
    |];
    [|
      (No, ' ');
      (DW, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (TL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (TL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DW, ' ');
      (No, ' ');
    |];
    [|
      (TW, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (TW, ' ');
      (No, ' ');
      (No, ' ');
      (No, ' ');
      (DL, ' ');
      (No, ' ');
      (No, ' ');
      (TW, ' ');
    |];
  |]
